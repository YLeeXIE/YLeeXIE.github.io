<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yleexie.github.io</id>
    <title>代码猿</title>
    <updated>2019-10-10T16:01:17.853Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yleexie.github.io"/>
    <link rel="self" href="https://yleexie.github.io/atom.xml"/>
    <subtitle>一入编程深似海
从此妹子是路人</subtitle>
    <logo>https://yleexie.github.io/images/avatar.png</logo>
    <icon>https://yleexie.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, 代码猿</rights>
    <entry>
        <title type="html"><![CDATA[整理经常在H5移动端开发遇到的知识]]></title>
        <id>https://yleexie.github.io/post/ckt4Y7_N1</id>
        <link href="https://yleexie.github.io/post/ckt4Y7_N1">
        </link>
        <updated>2019-10-10T15:47:41.000Z</updated>
        <summary type="html"><![CDATA[<p>viewport、强制浏览器全屏、IOS的Web APP模式、可点击元素出现阴影（这个我觉得真没必要去掉，用户点击是需要反馈的，而这个背景色刚刚好提供了一种反馈）等等，太多啦，这些相信大家百度一下就可以查到很多资料</p>
<p>本篇文章主要是讲一些其他的或者优化手段。内容不多</p>
<p><strong>1. 弹出数字键盘</strong></p>
<pre><code>&lt;!-- 有&quot;#&quot; &quot;*&quot;符号输入 --&gt;
&lt;input type=&quot;tel&quot;&gt;

&lt;!-- 纯数字 --&gt;
&lt;input pattern=&quot;\d*&quot;&gt;
安卓跟IOS的表现形式应该不一样，大家可以自己试试。当运用了正则pattern后，就不用关注input的类型了
</code></pre>
<p><strong>1. 调用系统的某些功能</strong></p>
<pre><code>&lt;!-- 拨号 --&gt;
&lt;a href=&quot;tel:10086&quot;&gt;打电话给: 10086&lt;/a&gt;

&lt;!-- 发送短信 --&gt;
&lt;a href=&quot;sms:10086&quot;&gt;发短信给: 10086&lt;/a&gt;

&lt;!-- 发送邮件 --&gt;
&lt;a href=&quot;mailto:839626987@qq.com&quot;&gt;发邮件给：839626987@qq.com&lt;/a&gt;

&lt;!-- 选择照片或者拍摄照片 --&gt;
&lt;input type=&quot;file&quot; accept=&quot;image/*&quot;&gt;

&lt;!-- 选择视频或者拍摄视频 --&gt;
&lt;input type=&quot;file&quot; accept=&quot;video/*&quot;&gt;

&lt;!-- 多选 --&gt;
&lt;input type=&quot;file&quot; multiple&gt;
</code></pre>
<p><strong>3. 打开原生应用</strong></p>
<pre><code>&lt;a href=&quot;weixin://&quot;&gt;打开微信&lt;/a&gt;
&lt;a href=&quot;alipays://&quot;&gt;打开支付宝&lt;/a&gt;
&lt;a href=&quot;alipays://platformapi/startapp?saId=10000007&quot;&gt;打开支付宝的扫一扫功能&lt;/a&gt;
&lt;a href=&quot;alipays://platformapi/startapp?appId=60000002&quot;&gt;打开支付宝的蚂蚁森林&lt;/a&gt;
</code></pre>
<p>这种方式叫做URL Scheme，是一种协议，一般用来访问APP或者APP中的某个功能/页面（如唤醒APP后打开指定页面或者使用某些功能）</p>
<p>URL Scheme的基本格式如下：</p>
<pre><code>     行为(应用的某个功能/页面)    
            |
scheme://[path][?query]
   |               |
应用标识       功能需要的参数
</code></pre>
<p>一般是由APP开发者自己定义，比如规定一些参数或者路径让其他开发者来访问，就像上面的例子</p>
<p>注意事项：</p>
<pre><code>唤醒APP的条件是你的手机已经安装了该APP
某些浏览器会禁用此协议，比如微信内部浏览器（除非开了白名单）
</code></pre>
<p>后面应该会专门写一篇文章用来探讨唤醒APP</p>
<p><strong>1. 解决active伪类失效</strong><br>
<code>&lt;body ontouchstart&gt;&lt;/body&gt;</code><br>
给body注册一个空事件即可</p>
<p><strong>5. 忽略自动识别</strong></p>
<pre><code>&lt;!-- 忽略浏览器自动识别数字为电话号码 --&gt;
&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;

&lt;!-- 忽略浏览器自动识别邮箱账号 --&gt;
&lt;meta name=&quot;format-detection&quot; content=&quot;email=no&quot;&gt;
当页面上的内容包含了手机号/邮箱等，会自动转换成可点击的链接
</code></pre>
<p>比如你有如下代码：</p>
<p><code>&lt;p&gt;13192733603&lt;/P&gt;</code><br>
但是有些浏览器会识别为手机，并且可以点击拨号</p>
<p><strong>6. 解决input失焦后页面没有回弹</strong><br>
一般出现在IOS设备中的微信内部浏览器，出现的条件为：</p>
<p>页面高度过小<br>
聚焦时，页面需要往上移动的时候<br>
所以一般input在页面上方或者顶部都不会出现无法回弹</p>
<p>解决办法为，在聚焦时，获取当前滚动条高度，然后失焦时，赋值之前获取的高度：</p>
<pre><code>&lt;template&gt;
  &lt;input type=&quot;text&quot; @focus=&quot;focus&quot; @blur=&quot;blur&quot;&gt;
&lt;/template&gt;

&lt;script&gt;
  export default {
    data() {
      return {
        scrollTop: 0
      }
    },
    
    methods: {
      focus() {
        this.scrollTop = document.scrollingElement.scrollTop;
      },
      
      blur() {
        document.scrollingElement.scrollTo(0, this.scrollTop);
      }
    }
  }
&lt;/script&gt;
</code></pre>
<p><strong>6. 禁止长按</strong><br>
以上行为可以总结成这几个（每个手机以及浏览器的表现形式不一样）：长按图片保存、长按选择文字、长按链接/手机号/邮箱时呼出菜单。</p>
<p>想要禁止这些浏览器的默认行为，可以使用以下CSS：</p>
<pre><code>// 禁止长按图片保存
img {
  -webkit-touch-callout: none;
  pointer-events: none; // 像微信浏览器还是无法禁止，加上这行样式即可
}

// 禁止长按选择文字
div {
  -webkit-user-select: none;
}

// 禁止长按呼出菜单
div {
  -webkit-touch-callout: none;
}
</code></pre>
<p><strong>7. 滑动不顺畅，粘手</strong><br>
一般出现在IOS设备中，自定义盒子使用了overflow: auto || scroll后出现的情况。</p>
<p>优化代码：</p>
<pre><code>div {
  -webkit-overflow-scrolling: touch;
}
</code></pre>
<p><strong>8. 屏幕旋转为横屏时，字体大小会变</strong><br>
具体出现的情况不明，有时候有有时候没有，欢迎指出。</p>
<p>优化代码：</p>
<pre><code>* {
  -webkit-text-size-adjust: 100%;
}
</code></pre>
<p><strong>9. 最简单的rem自适应</strong><br>
大家都知道，rem的值是根据根元素的字体大小相对计算的，但是我们每个设备的大小不一样，所以根元素的字体大小要动态设置</p>
<pre><code>html {
 font-size: calc(100vw / 3.75);
}

body {
  font-size: .14rem;
}
</code></pre>
<p>像我一般的话，直接搞lib-flexible、postcss-pxtorem就完事啦！</p>
<p><strong>10. 滑动穿透</strong><br>
当你想在出现遮罩的时候，锁住用户的滚动行为，你可以这么做。</p>
<p>假设HTML结构如下：</p>
<pre><code>&lt;div class=&quot;mask&quot;&gt;
  &lt;div class=&quot;content&quot;&gt;我是弹框&lt;/div&gt;
&lt;/div&gt;
</code></pre>
<p>CSS样式如下：</p>
<pre><code>.mask {
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: rgba($color: #333, $alpha: .6);

  .content {
    padding: 20px;
    background-color: #fff;
    width: 300px;
  }
}
</code></pre>
<p>可以看到，当在遮罩上滑动的时候，是会穿透到父节点的，最简单的办法就是阻住默认行为：</p>
<pre><code>document.querySelector(&quot;.mask&quot;).addEventListener(&quot;touchmove&quot;, event =&gt; {
  event.preventDefault();
});
</code></pre>
<p>如果在vue中，你可以这么写：</p>
<pre><code>&lt;div class=&quot;mask&quot; @touchumove.prevent&gt;&lt;/div&gt;
</code></pre>
<p>如果.content也有滚动条，那么只要阻止遮罩本身就行：</p>
<pre><code>document.querySelector(&quot;.mask&quot;).addEventListener(&quot;touchmove&quot;, event =&gt; {
  if (event.target.classList.contains(&quot;mask&quot;)) event.preventDefault();
});
</code></pre>
<p>或者：</p>
]]></summary>
        <content type="html"><![CDATA[<p>viewport、强制浏览器全屏、IOS的Web APP模式、可点击元素出现阴影（这个我觉得真没必要去掉，用户点击是需要反馈的，而这个背景色刚刚好提供了一种反馈）等等，太多啦，这些相信大家百度一下就可以查到很多资料</p>
<p>本篇文章主要是讲一些其他的或者优化手段。内容不多</p>
<p><strong>1. 弹出数字键盘</strong></p>
<pre><code>&lt;!-- 有&quot;#&quot; &quot;*&quot;符号输入 --&gt;
&lt;input type=&quot;tel&quot;&gt;

&lt;!-- 纯数字 --&gt;
&lt;input pattern=&quot;\d*&quot;&gt;
安卓跟IOS的表现形式应该不一样，大家可以自己试试。当运用了正则pattern后，就不用关注input的类型了
</code></pre>
<p><strong>1. 调用系统的某些功能</strong></p>
<pre><code>&lt;!-- 拨号 --&gt;
&lt;a href=&quot;tel:10086&quot;&gt;打电话给: 10086&lt;/a&gt;

&lt;!-- 发送短信 --&gt;
&lt;a href=&quot;sms:10086&quot;&gt;发短信给: 10086&lt;/a&gt;

&lt;!-- 发送邮件 --&gt;
&lt;a href=&quot;mailto:839626987@qq.com&quot;&gt;发邮件给：839626987@qq.com&lt;/a&gt;

&lt;!-- 选择照片或者拍摄照片 --&gt;
&lt;input type=&quot;file&quot; accept=&quot;image/*&quot;&gt;

&lt;!-- 选择视频或者拍摄视频 --&gt;
&lt;input type=&quot;file&quot; accept=&quot;video/*&quot;&gt;

&lt;!-- 多选 --&gt;
&lt;input type=&quot;file&quot; multiple&gt;
</code></pre>
<p><strong>3. 打开原生应用</strong></p>
<pre><code>&lt;a href=&quot;weixin://&quot;&gt;打开微信&lt;/a&gt;
&lt;a href=&quot;alipays://&quot;&gt;打开支付宝&lt;/a&gt;
&lt;a href=&quot;alipays://platformapi/startapp?saId=10000007&quot;&gt;打开支付宝的扫一扫功能&lt;/a&gt;
&lt;a href=&quot;alipays://platformapi/startapp?appId=60000002&quot;&gt;打开支付宝的蚂蚁森林&lt;/a&gt;
</code></pre>
<p>这种方式叫做URL Scheme，是一种协议，一般用来访问APP或者APP中的某个功能/页面（如唤醒APP后打开指定页面或者使用某些功能）</p>
<p>URL Scheme的基本格式如下：</p>
<pre><code>     行为(应用的某个功能/页面)    
            |
scheme://[path][?query]
   |               |
应用标识       功能需要的参数
</code></pre>
<p>一般是由APP开发者自己定义，比如规定一些参数或者路径让其他开发者来访问，就像上面的例子</p>
<p>注意事项：</p>
<pre><code>唤醒APP的条件是你的手机已经安装了该APP
某些浏览器会禁用此协议，比如微信内部浏览器（除非开了白名单）
</code></pre>
<p>后面应该会专门写一篇文章用来探讨唤醒APP</p>
<p><strong>1. 解决active伪类失效</strong><br>
<code>&lt;body ontouchstart&gt;&lt;/body&gt;</code><br>
给body注册一个空事件即可</p>
<p><strong>5. 忽略自动识别</strong></p>
<pre><code>&lt;!-- 忽略浏览器自动识别数字为电话号码 --&gt;
&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;

&lt;!-- 忽略浏览器自动识别邮箱账号 --&gt;
&lt;meta name=&quot;format-detection&quot; content=&quot;email=no&quot;&gt;
当页面上的内容包含了手机号/邮箱等，会自动转换成可点击的链接
</code></pre>
<p>比如你有如下代码：</p>
<p><code>&lt;p&gt;13192733603&lt;/P&gt;</code><br>
但是有些浏览器会识别为手机，并且可以点击拨号</p>
<p><strong>6. 解决input失焦后页面没有回弹</strong><br>
一般出现在IOS设备中的微信内部浏览器，出现的条件为：</p>
<p>页面高度过小<br>
聚焦时，页面需要往上移动的时候<br>
所以一般input在页面上方或者顶部都不会出现无法回弹</p>
<p>解决办法为，在聚焦时，获取当前滚动条高度，然后失焦时，赋值之前获取的高度：</p>
<pre><code>&lt;template&gt;
  &lt;input type=&quot;text&quot; @focus=&quot;focus&quot; @blur=&quot;blur&quot;&gt;
&lt;/template&gt;

&lt;script&gt;
  export default {
    data() {
      return {
        scrollTop: 0
      }
    },
    
    methods: {
      focus() {
        this.scrollTop = document.scrollingElement.scrollTop;
      },
      
      blur() {
        document.scrollingElement.scrollTo(0, this.scrollTop);
      }
    }
  }
&lt;/script&gt;
</code></pre>
<p><strong>6. 禁止长按</strong><br>
以上行为可以总结成这几个（每个手机以及浏览器的表现形式不一样）：长按图片保存、长按选择文字、长按链接/手机号/邮箱时呼出菜单。</p>
<p>想要禁止这些浏览器的默认行为，可以使用以下CSS：</p>
<pre><code>// 禁止长按图片保存
img {
  -webkit-touch-callout: none;
  pointer-events: none; // 像微信浏览器还是无法禁止，加上这行样式即可
}

// 禁止长按选择文字
div {
  -webkit-user-select: none;
}

// 禁止长按呼出菜单
div {
  -webkit-touch-callout: none;
}
</code></pre>
<p><strong>7. 滑动不顺畅，粘手</strong><br>
一般出现在IOS设备中，自定义盒子使用了overflow: auto || scroll后出现的情况。</p>
<p>优化代码：</p>
<pre><code>div {
  -webkit-overflow-scrolling: touch;
}
</code></pre>
<p><strong>8. 屏幕旋转为横屏时，字体大小会变</strong><br>
具体出现的情况不明，有时候有有时候没有，欢迎指出。</p>
<p>优化代码：</p>
<pre><code>* {
  -webkit-text-size-adjust: 100%;
}
</code></pre>
<p><strong>9. 最简单的rem自适应</strong><br>
大家都知道，rem的值是根据根元素的字体大小相对计算的，但是我们每个设备的大小不一样，所以根元素的字体大小要动态设置</p>
<pre><code>html {
 font-size: calc(100vw / 3.75);
}

body {
  font-size: .14rem;
}
</code></pre>
<p>像我一般的话，直接搞lib-flexible、postcss-pxtorem就完事啦！</p>
<p><strong>10. 滑动穿透</strong><br>
当你想在出现遮罩的时候，锁住用户的滚动行为，你可以这么做。</p>
<p>假设HTML结构如下：</p>
<pre><code>&lt;div class=&quot;mask&quot;&gt;
  &lt;div class=&quot;content&quot;&gt;我是弹框&lt;/div&gt;
&lt;/div&gt;
</code></pre>
<p>CSS样式如下：</p>
<pre><code>.mask {
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: rgba($color: #333, $alpha: .6);

  .content {
    padding: 20px;
    background-color: #fff;
    width: 300px;
  }
}
</code></pre>
<p>可以看到，当在遮罩上滑动的时候，是会穿透到父节点的，最简单的办法就是阻住默认行为：</p>
<pre><code>document.querySelector(&quot;.mask&quot;).addEventListener(&quot;touchmove&quot;, event =&gt; {
  event.preventDefault();
});
</code></pre>
<p>如果在vue中，你可以这么写：</p>
<pre><code>&lt;div class=&quot;mask&quot; @touchumove.prevent&gt;&lt;/div&gt;
</code></pre>
<p>如果.content也有滚动条，那么只要阻止遮罩本身就行：</p>
<pre><code>document.querySelector(&quot;.mask&quot;).addEventListener(&quot;touchmove&quot;, event =&gt; {
  if (event.target.classList.contains(&quot;mask&quot;)) event.preventDefault();
});
</code></pre>
<p>或者：</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[8个实用Python的脚本，收藏备用]]></title>
        <id>https://yleexie.github.io/post/bksGIXizU</id>
        <link href="https://yleexie.github.io/post/bksGIXizU">
        </link>
        <updated>2019-10-10T15:41:11.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[一张图理清 Vue 3.0 的响应式系统]]></title>
        <id>https://yleexie.github.io/post/qGUCTCcrs</id>
        <link href="https://yleexie.github.io/post/qGUCTCcrs">
        </link>
        <updated>2019-10-10T15:24:22.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git常用指令大全]]></title>
        <id>https://yleexie.github.io/post/git-chang-yong-zhi-ling-da-quan</id>
        <link href="https://yleexie.github.io/post/git-chang-yong-zhi-ling-da-quan">
        </link>
        <updated>2019-10-10T08:29:49.000Z</updated>
    </entry>
</feed>